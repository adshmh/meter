version: "3.5"

services:
  relay-meter-collector:
    build:
      context: ..
      dockerfile: Dockerfile.production.collector
    container_name: relay-meter-collector
    restart: always
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: mytoken
      INFLUXDB_ORG: myorg
      INFLUXDB_BUCKET_DAILY: mainnetRelay
      INFLUXDB_BUCKET_CURRENT: mainnetRelay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
      POSTGRES_HOST: relay-meter-db:5432
      MAX_ARCHIVE_AGE: 60
      COLLECTION_INTERVAL_SECONDS: 30
    depends_on:
      influxdb:
        condition: service_healthy
      relay-meter-db:
        condition: service_healthy

  relay-meter-apiserver:
    build:
      context: ..
      dockerfile: Dockerfile.production.apiserver
    container_name: relay-meter-apiserver
    restart: always
    ports:
      - 127.0.0.1:9898:9898
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
      POSTGRES_HOST: localhost:5432
      BACKEND_API_URL: http://localhost:9898
      BACKEND_API_TOKEN: test_token_123
    depends_on:
      influxdb:
        condition: service_healthy
      relay-meter-db:
        condition: service_healthy
      relay-meter-collector:
        condition: service_started

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./tmp/influxdb:/var/lib/influxdb2:rw
      - ./test-init.csv:/var/lib/init-data/test-init.csv
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=influxuser
      - DOCKER_INFLUXDB_INIT_PASSWORD=influxpassword
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=mainnetRelay
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken

  relay-meter-db:
    image: postgres
    container_name: relay-meter-db
    restart: always
    ports:
      - 5432:5432
    command: -p 5432
    environment:
      POSTGRES_PASSWORD: pgpassword
    volumes:
      - ./db_init_script.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: pg_isready -U postgres
